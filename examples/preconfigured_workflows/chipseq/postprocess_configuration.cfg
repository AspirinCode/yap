#Postprocess configuration file
#General rules->
# In order to include the command in the analysis, set "execute_command" option to 'yes'.  if set to "no" command and its parameters will not be taken into consideration. 
#All paths should be in double quotes
#No spaces/blanks  between file names
#If the comamnd requires a output file name as input, then please specify "output_file"
#YAP takes care of naming output file based on samples. you can aslo specify any suffix. eg : "output_file.txt", "output_file_example.out" or "output_file.pdf"
#Program recoginzes the syntax "output_file" and replaces that with proper output structure and output file name.  
#eg : output_file.txt , output_file.out if the command generates .pdf files then put output_file.pdf
#If  the command requires the output directory as a input , then please specify "output_directory".  
# YAP creates proper output directory based on the analysis stage or the command.

#If the command does not read from input pipe and requires a file based input, Please specify(file_based_input) as the variable.
:begin_tee
        "input_directory" := "aligner_output"
        "input_file_type" := "*coordinate*"

        :begin
        "execute_command" := "yes"
        "command_name" := "java -Xmx1g -jar ../../packages/picard-tools/1.89/CollectAlignmentSummaryMetrics.jar"
        "" := "VALIDATION_STRINGENCY=SILENT I= /dev/stdin O=output_file.txt IS_BISULFITE_SEQUENCED=true ASSUME_SORTED=True REFERENCE_SEQUENCE= ../../accessory_files/hg19.fa QUIET=True"
        :end
        #picard quality score distribution 
        :begin
        "execute_command" := "yes"
        "command_name" := "java -Xmx1g -jar ../../packages/picard-tools/1.89/QualityScoreDistribution.jar"
        "" := "VALIDATION_STRINGENCY=SILENT I= /dev/stdin O=output_file.txt ASSUME_SORTED=true REFERENCE_SEQUENCE= ../../accessory_files/hg19.fa CHART=output_file.pdf ALIGNED_READS_ONLY=true"
        :end

        #picard mean quality by cycle
        :begin
        "execute_command" := "yes"
        "command_name" := "java -Xmx1g -jar ../../packages/picard-tools/1.89/MeanQualityByCycle.jar"
        "" := "VALIDATION_STRINGENCY=SILENT ASSUME_SORTED=true REFERENCE_SEQUENCE= ../../accessory_files/hg19.fa I= /dev/stdin O=output_file.txt CHART=output_file.pdf ALIGNED_READS_ONLY=true" 
        :end

        #picard collect GC bias metrics
        :begin
        "execute_command" := "yes"
        "command_name" := "java -Xmx1g -jar ../../packages/picard-tools/1.89/CollectGcBiasMetrics.jar"
        "" := "VALIDATION_STRINGENCY=SILENT I= /dev/stdin O=output_file.txt SUMMARY_OUTPUT=output_file_summary.txt CHART=output_file.pdf ASSUME_SORTED=true REFERENCE_SEQUENCE= ../../accessory_files/hg19.fa"
        :end

:end_tee

#picard mark duplicates
:begin
"execute_command" := "yes"
"command_name" := "java -Xmx1g -jar  ../../packages/picard-tools/1.89/MarkDuplicates.jar"
"input_directory" := "aligner_output"
"input_file_type" := "*coordinate*"
"" := "VALIDATION_STRINGENCY=SILENT TMP_DIR= /scratch/$USER MAX_RECORDS_IN_RAM=1000000 MAX_SEQUENCES_FOR_DISK_READ_ENDS_MAP=2000 ASSUME_SORTED=true I=file_based_input O=output_file.bam METRICS_FILE=output_file.txt"
:end

:begin
"execute_command" := "yes"
"command_name" := "../../packages/macs/2.0.10.09132012/macs2"
"input_directory" := "aligner_output"
"input_file_type" := "*coordinate*"
"list_of_samples_to_compare" := "peakcall_samples"
"list_delimiter" := "-c" 
"callpeak" := "-f BAM -g hs -n output_directory/sample_name -m 12 32 --bw 150 -p 0.0000001 -s 50 -t "
:end
