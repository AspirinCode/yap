#Postprocess configuration file
#General rules->
# In order to include the command in the analysis, set "execute_command" option to 'yes'.  if set to "no" command and its parameters will not be taken into consideration. 
#All paths should be in double quotes
#No spaces/blanks  between file names
#If the comamnd requires a output file name as input, then please specify "output_file"
#YAP takes care of naming output file based on samples. you can aslo specify any suffix. eg : "output_file.txt", "output_file_example.out" or "output_file.pdf"
#Program recoginzes the syntax "output_file" and replaces that with proper output structure and output file name.  
#eg : output_file.txt , output_file.out if the command generates .pdf files then put output_file.pdf
#If  the command requires the output directory as a input , then please specify "output_directory".  
# YAP creates proper output directory based on the analysis stage or the command.
#If the command does not read from input pipe and requires a file based input, Please specify(file_based_input) as the variable.

#htseq-count for sam files
:begin
"execute_command" := "yes"
"command_name" := "../../packages/htseq/htseq-count"
"input_directory" := "aligner_output"
"input_file_type" := "*queryname*.sam"
"" := "-s no -q file_based_input ../../accessory_files/human-ucsc-refGene.gtf >output_file.out"
:end

#htseq-count for bam files
:begin
"execute_command" := "no"
"command_name" := "samtools"
"input_directory" := "aligner_output"
"input_file_type" := "*queryname*.bam"
"" := "view -h - | ../../packages/htseq/htseq-count -s no -q - ../../accessory_files/human-ucsc-refGene.gtf >output_file_htseq-count.out"
:end

:begin_tee
	"input_directory" := "aligner_output"
	"input_file_type" := "*coordinate*"
	
	:begin
	"execute_command" := "yes"
	"command_name" := "java -Xmx1g -jar ../../packages/picard-tools/1.89/CollectAlignmentSummaryMetrics.jar"
	"" := "VALIDATION_STRINGENCY=SILENT I= /dev/stdin O=output_file.txt IS_BISULFITE_SEQUENCED=true ASSUME_SORTED=True REFERENCE_SEQUENCE= ../../accessory_files/hg19.fa  QUIET=True"
	:end

	:begin
	"execute_command" := "yes"
	"command_name" := "java -Xmx1g -jar ../../packages/picard-tools/1.89/QualityScoreDistribution.jar"
	"" := "VALIDATION_STRINGENCY=SILENT I= /dev/stdin O=output_file.txt ASSUME_SORTED=true REFERENCE_SEQUENCE= ../../accessory_files/hg19.fa CHART=output_file.pdf ALIGNED_READS_ONLY=true"
	:end

	:begin
	"execute_command" := "yes"
	"command_name" := "java -Xmx1g -jar ../../packages/picard-tools/1.89/MeanQualityByCycle.jar"
	"" := "VALIDATION_STRINGENCY=SILENT ASSUME_SORTED=true REFERENCE_SEQUENCE= ../../accessory_files/hg19.fa I= /dev/stdin O=output_file.txt CHART=output_file.pdf ALIGNED_READS_ONLY=true"
	:end
	
	:begin
	"execute_command" := "yes"
	"command_name" := "java -Xmx1g -jar ../../packages/picard-tools/1.89/CollectGcBiasMetrics.jar"
	"" := "VALIDATION_STRINGENCY=SILENT I= /dev/stdin O=output_file.txt SUMMARY_OUTPUT=output_file_summary.txt CHART=output_file.pdf ASSUME_SORTED=true REFERENCE_SEQUENCE= ../../accessory_files/hg19.fa " 
        :end

        :begin
        "execute_command" := "yes"
        "command_name" := "java -Xmx1g -jar  ../../packages/picard-tools/1.89/CollectRnaSeqMetrics.jar"
        "" := "VALIDATION_STRINGENCY=SILENT ASSUME_SORTED=true STRAND_SPECIFICITY=NONE REF_FLAT=  ../../accessory_files/human_refflat_for_picard.gff RIBOSOMAL_INTERVALS= ../../accessory_files/Homo_sapiens_assembly19.rRNA.interval_list I= /dev/stdin O=output_file.txt CHART_OUTPUT=output_file.pdf REFERENCE_SEQUENCE= ../../accessory_files/hg19.fa"

        :end

        :begin
        "execute_command" := "yes"
        "command_name" := "../../packages/picard-tools/1.89/CalculateHsMetrics.jar"
        "" := "VALIDATION_STRINGENCY=SILENT BAIT_INTERVALS= ../../accessory_files/TruSeq_exome_targeted_regions_for_picard.bed TARGET_INTERVALS= ../../accessory_files/TruSeq_exome_targeted_regions_for_picard.bed INPUT= /dev/stdin OUTPUT=output_file.txt REFERENCE_SEQUENCE= ../../accessory_files/hg19.fa" 
        :end
	
	:begin
	"execute_command" := "yes"
        "command_name" := "java -Xmx1g -jar ../../packages/picard-tools/1.89/CollectTargetedPcrMetrics.jar"
        "" := "VALIDATION_STRINGENCY=SILENT AMPLICON_INTERVALS= ../../accessory_files/TruSeq_exome_targeted_regions_for_picard.bed TARGET_INTERVALS= ../../accessory_files/TruSeq_exome_targeted_regions_for_picard.bed INPUT= /dev/stdin OUTPUT=output_file.txt REFERENCE_SEQUENCE= ../../accessory_files/hg19.fa"
        :end

:end_tee

:begin
"execute_command" := "yes"
"command_name" := "java -Xmx1g -jar  ../../packages/picard-tools/1.89/CollectInsertSizeMetrics.jar"
"input_directory" := "aligner_output"
"input_file_type" := "*coordinate*"
"" := "VALIDATION_STRINGENCY=SILENT ASSUME_SORTED=true I=file_based_input O=output_file.txt H=output_file.pdf TMP_DIR= /scratch/$USER HISTOGRAM_WIDTH=500" 
:end

#picard mark duplicates
:begin
"execute_command" := "yes"
"command_name" := "java -Xmx1g -jar  ../../packages/picard-tools/1.89/MarkDuplicates.jar"
"input_directory" := "aligner_output"
"input_file_type" := "*coordinate*"
"" := "VALIDATION_STRINGENCY=SILENT TMP_DIR= /scratch/$USER MAX_RECORDS_IN_RAM=1000000 MAX_SEQUENCES_FOR_DISK_READ_ENDS_MAP=2000 ASSUME_SORTED=true I=file_based_input O=output_file.bam METRICS_FILE=output_file.txt"
:end

#cufflinks v2.1.1
:begin
"execute_command" := "yes"
"command_name" := "../../packages/cufflinks/2.1.1/cufflinks" 
"input_directory" := "aligner_output"
"input_file_type" := "*coordinate*"
"" := "file_based_input -o output_directory -p 12 -G ../../accessory_files/human-ucsc-refGene.gtf" 
:end

#cuffdiff v2.1.1 (exported)
:begin
"execute_command" := "no"
"command_name" := "../../packages/cufflinks/2.1.1/cuffdiff"
"list_of_samples_to_compare" := "cuffdiff_input_sample_file" #"all" or a text file with sample names(eg: cuffdiff_input_sample_file)
"input_directory" := "aligner_output"
"input_file_type" := "*coordinate*"   
"" := "-o output_directory -p 12 ../../accessory_files/human-ucsc-refGene.gtf" 
:end

#cuffmerge:
:begin
"execute_command" := "no"
"command_name" := "../../packages/cufflinks/2.1.1/cuffmerge"
"input_directory" := "postprocess_output"
"input_file_type" := "transcripts" 
"" := "--ref-gtf ../../accessory_files/human-ucsc-refGene.gtf --ref-sequence ../../accessory_files/hg19.fa -p 12 -o output_directory list_of_samples cuffmerge_input_sample_file" 
:end

#cuffcompare v2.1.1 (exported)
:begin
"execute_command" := "no"
"command_name" := "../../packages/cufflinks/2.1.1/cuffcompare"
"input_directory" := "postprocess_output"
"input_file_type" := "transcripts"
"" := "-i"
"list_of_samples" := "cuffcompare_input_sample_file" #"all" or a text file with sample names.(eg: cuffcompare_input_sample_file) 
"-o" := "output_file -r ../../accessory_files/human-ucsc-refGene.gtf -s ../../accessory_files/hg19.fa -p 12"
:end
